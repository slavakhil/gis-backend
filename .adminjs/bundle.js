(function (React) {
    'use strict';

    function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

    var React__default = /*#__PURE__*/_interopDefault(React);

    const Dashboard = () => {
      React.useEffect(() => {
        window.location.href = '/admin/resources/Новости';
      });
      return null;
    };

    const UploadPhoto = props => {
      const {
        onChange,
        property,
        record
      } = props;
      const handleChange = async event => {
        const file = event.target.files?.[0];
        if (!file) return;
        const formData = new FormData();
        formData.append('file', file);
        const response = await fetch('/admin/upload', {
          method: 'POST',
          body: formData
        });
        const data = await response.json();
        const filePath = data.filePath;
        onChange(property.name, filePath);
      };
      return /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("input", {
        type: 'file',
        onChange: handleChange
      }));
    };

    const ImagePreview = ({
      record,
      property
    }) => {
      const filePath = record.params[property.path];
      console.log(filePath);
      if (!filePath) {
        return /*#__PURE__*/React__default.default.createElement("span", null, "\u041D\u0435\u0442 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F");
      }
      const url = filePath.replace('/tmp', '');
      return /*#__PURE__*/React__default.default.createElement("img", {
        src: url,
        alt: 'asdfasdf',
        style: {
          width: '80px',
          height: '80px',
          objectFit: 'cover',
          borderRadius: 8
        }
      });
    };

    AdminJS.UserComponents = {};
    AdminJS.UserComponents.DashboardRoute = Dashboard;
    AdminJS.UserComponents.UploadPhoto = UploadPhoto;
    AdminJS.UserComponents.ImagePreview = ImagePreview;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9kaXN0L2FkbWluL2NvbXBvbmVudHMvZGFzaGJvYXJkLmpzIiwiLi4vZGlzdC9hZG1pbi9jb21wb25lbnRzL3VwbG9hZC1waG90by5qcyIsIi4uL2Rpc3QvYWRtaW4vY29tcG9uZW50cy9pbWFnZS1wcmV2aWV3LmpzIiwiZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuY29uc3QgRGFzaGJvYXJkID0gKCkgPT4ge1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9hZG1pbi9yZXNvdXJjZXMv0J3QvtCy0L7RgdGC0LgnO1xuICAgIH0pO1xuICAgIHJldHVybiBudWxsO1xufTtcbmV4cG9ydCB7IERhc2hib2FyZCB9O1xuZXhwb3J0IGRlZmF1bHQgRGFzaGJvYXJkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmNvbnN0IFVwbG9hZFBob3RvID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSwgcHJvcGVydHksIHJlY29yZCB9ID0gcHJvcHM7XG4gICAgY29uc3QgaGFuZGxlQ2hhbmdlID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXM/LlswXTtcbiAgICAgICAgaWYgKCFmaWxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FkbWluL3VwbG9hZCcsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgYm9keTogZm9ybURhdGEsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBjb25zdCBmaWxlUGF0aCA9IGRhdGEuZmlsZVBhdGg7XG4gICAgICAgIG9uQ2hhbmdlKHByb3BlcnR5Lm5hbWUsIGZpbGVQYXRoKTtcbiAgICB9O1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgeyB0eXBlOiAnZmlsZScsIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UgfSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBVcGxvYWRQaG90bztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5jb25zdCBJbWFnZVByZXZpZXcgPSAoeyByZWNvcmQsIHByb3BlcnR5IH0pID0+IHtcbiAgICBjb25zdCBmaWxlUGF0aCA9IHJlY29yZC5wYXJhbXNbcHJvcGVydHkucGF0aF07XG4gICAgY29uc29sZS5sb2coZmlsZVBhdGgpO1xuICAgIGlmICghZmlsZVBhdGgpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIFwiXFx1MDQxRFxcdTA0MzVcXHUwNDQyIFxcdTA0MzhcXHUwNDM3XFx1MDQzRVxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGXCIpO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSBmaWxlUGF0aC5yZXBsYWNlKCcvdG1wJywgJycpO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7IHNyYzogdXJsLCBhbHQ6ICdhc2RmYXNkZicsIHN0eWxlOiB7IHdpZHRoOiAnODBweCcsIGhlaWdodDogJzgwcHgnLCBvYmplY3RGaXQ6ICdjb3ZlcicsIGJvcmRlclJhZGl1czogOCB9IH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBJbWFnZVByZXZpZXc7XG4iLCJBZG1pbkpTLlVzZXJDb21wb25lbnRzID0ge31cbmltcG9ydCBEYXNoYm9hcmRSb3V0ZSBmcm9tICcuLi9kaXN0L2FkbWluL2NvbXBvbmVudHMvZGFzaGJvYXJkJ1xuQWRtaW5KUy5Vc2VyQ29tcG9uZW50cy5EYXNoYm9hcmRSb3V0ZSA9IERhc2hib2FyZFJvdXRlXG5pbXBvcnQgVXBsb2FkUGhvdG8gZnJvbSAnLi4vZGlzdC9hZG1pbi9jb21wb25lbnRzL3VwbG9hZC1waG90bydcbkFkbWluSlMuVXNlckNvbXBvbmVudHMuVXBsb2FkUGhvdG8gPSBVcGxvYWRQaG90b1xuaW1wb3J0IEltYWdlUHJldmlldyBmcm9tICcuLi9kaXN0L2FkbWluL2NvbXBvbmVudHMvaW1hZ2UtcHJldmlldydcbkFkbWluSlMuVXNlckNvbXBvbmVudHMuSW1hZ2VQcmV2aWV3ID0gSW1hZ2VQcmV2aWV3Il0sIm5hbWVzIjpbIkRhc2hib2FyZCIsInVzZUVmZmVjdCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsIlVwbG9hZFBob3RvIiwicHJvcHMiLCJvbkNoYW5nZSIsInByb3BlcnR5IiwicmVjb3JkIiwiaGFuZGxlQ2hhbmdlIiwiZXZlbnQiLCJmaWxlIiwidGFyZ2V0IiwiZmlsZXMiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJkYXRhIiwianNvbiIsImZpbGVQYXRoIiwibmFtZSIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJJbWFnZVByZXZpZXciLCJwYXJhbXMiLCJwYXRoIiwiY29uc29sZSIsImxvZyIsInVybCIsInJlcGxhY2UiLCJzcmMiLCJhbHQiLCJzdHlsZSIsIndpZHRoIiwiaGVpZ2h0Iiwib2JqZWN0Rml0IiwiYm9yZGVyUmFkaXVzIiwiQWRtaW5KUyIsIlVzZXJDb21wb25lbnRzIiwiRGFzaGJvYXJkUm91dGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7SUFDQSxNQUFNQSxTQUFTLEdBQUdBLE1BQU07SUFDcEJDLEVBQUFBLGVBQVMsQ0FBQyxN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
